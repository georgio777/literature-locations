#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./check-database.sh

set -e

echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[INFO] $1${NC}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

info() {
    echo -e "${BLUE}[CHECK] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if ! docker-compose -f docker-compose.production.yml ps | grep -q "Up"; then
    error "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∏—Ö –∫–æ–º–∞–Ω–¥–æ–π: docker-compose -f docker-compose.production.yml up -d"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL..."
if docker-compose -f docker-compose.production.yml exec -T postgres pg_isready -U ${POSTGRES_USER:-lit_user} > /dev/null 2>&1; then
    log "‚úÖ PostgreSQL –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    error "‚ùå PostgreSQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
DB_EXISTS=$(docker-compose -f docker-compose.production.yml exec -T postgres psql -U ${POSTGRES_USER:-lit_user} -lqt | cut -d \| -f 1 | grep -w ${POSTGRES_DB:-literature_locations_prod} | wc -l)

if [ "$DB_EXISTS" -eq 1 ]; then
    log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ${POSTGRES_DB:-literature_locations_prod} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    error "‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ${POSTGRES_DB:-literature_locations_prod} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü..."
TABLES_CHECK=$(docker-compose -f docker-compose.production.yml exec -T postgres psql -U ${POSTGRES_USER:-lit_user} -d ${POSTGRES_DB:-literature_locations_prod} -c "\dt" 2>/dev/null | grep -E "(literature_locations|location_descriptions)" | wc -l)

if [ "$TABLES_CHECK" -eq 2 ]; then
    log "‚úÖ –û–±–µ —Ç–∞–±–ª–∏—Ü—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç"
else
    warning "‚ö†Ô∏è –ù–µ –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞–π–¥–µ–Ω—ã. –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: $TABLES_CHECK –∏–∑ 2"
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–∫–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å—Ç—å
    echo "–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã:"
    docker-compose -f docker-compose.production.yml exec -T postgres psql -U ${POSTGRES_USER:-lit_user} -d ${POSTGRES_DB:-literature_locations_prod} -c "\dt" 2>/dev/null || echo "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö..."
LOCATIONS_COUNT=$(docker-compose -f docker-compose.production.yml exec -T postgres psql -U ${POSTGRES_USER:-lit_user} -d ${POSTGRES_DB:-literature_locations_prod} -c "SELECT COUNT(*) FROM literature_locations;" 2>/dev/null | grep -E "^\s*[0-9]+\s*$" | tr -d ' ' || echo "0")

if [ "$LOCATIONS_COUNT" -gt 0 ]; then
    log "‚úÖ –í —Ç–∞–±–ª–∏—Ü–µ literature_locations –Ω–∞–π–¥–µ–Ω–æ $LOCATIONS_COUNT –∑–∞–ø–∏—Å–µ–π"
else
    warning "‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ literature_locations –ø—É—Å—Ç–∞ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä
info "–ü—Ä–æ–≤–µ—Ä—è–µ–º API —Å–µ—Ä–≤–µ—Ä..."
if curl -f -s http://localhost:3001/api/locations > /dev/null 2>&1; then
    log "‚úÖ API —Å–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Ç–≤–µ—Ç API
    API_RESPONSE=$(curl -s http://localhost:3001/api/locations)
    if echo "$API_RESPONSE" | grep -q "\[\]"; then
        warning "‚ö†Ô∏è API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ - –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ"
    elif echo "$API_RESPONSE" | grep -q "error"; then
        error "‚ùå API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É: $API_RESPONSE"
    else
        log "‚úÖ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ"
    fi
else
    error "‚ùå API —Å–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞:"
docker-compose -f docker-compose.production.yml logs server --tail=10

echo ""
log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"